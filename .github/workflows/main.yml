name: UNIT_TEST

on:
  workflow_dispatch:
  pull_request:
#   push:
#     paths-ignore:
#     - 'docs/**'

jobs:
  unit_test:
    runs-on:
      - ubuntu-latest
    timeout-minutes: 100
    
    steps:
      - uses: actions/checkout@v3
        with:
          path: ${{ github.repository }}
          
      - name: Set up Go 1.19
        uses: actions/setup-go@v1
        with:
           go-version: 1.19.3
        id: go

      - name: Config Go env
        run: |
          cd ${{ github.repository }}
          pwd
          go env
          echo "GOPATH=$(go env GOPATH):$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
        shell: bash
        
      - name: Unit test
        run: |
          cd ${{ github.repository }}/src
          make test

      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: ${{ github.repository }}/src/cover.out
          flags: unittests # optional
          name: codecov-umbrella # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)

  UI_UT:
    env:
      UI_UT: true
    runs-on:
      #- self-hosted
      - ubuntu-latest
    timeout-minutes: 100
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - uses: actions/checkout@v3
        with:
          path: ${{ github.repository }}
      - name: script
        run: |
          pwd
          cd ${{ github.repository }}/src
          cd frontend
          bash ./test/ui_unit.sh
          df -h
      - name: Codecov For UI
        uses: codecov/codecov-action@v3
        with:
          file:  ${{ github.repository }}/src/frontend/coverage/icov.info
          flags: unittests