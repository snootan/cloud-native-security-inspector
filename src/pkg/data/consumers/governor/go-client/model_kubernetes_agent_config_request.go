/*
Catalog Governor Service REST API

This is the service to track assets deployed in customer clusters

API version: 0.1.0
Contact: content-building-ecosystem@vmware.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KubernetesAgentConfigRequest Payload to request agent config manifest for a cluster
type KubernetesAgentConfigRequest struct {
	MatchLabels []MatchLabel `json:"match_labels"`
	// API token for agent running in a cluster
	ApiToken string `json:"api_token"`
	AdditionalProperties map[string]interface{}
}

type _KubernetesAgentConfigRequest KubernetesAgentConfigRequest

// NewKubernetesAgentConfigRequest instantiates a new KubernetesAgentConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesAgentConfigRequest(matchLabels []MatchLabel, apiToken string) *KubernetesAgentConfigRequest {
	this := KubernetesAgentConfigRequest{}
	this.MatchLabels = matchLabels
	this.ApiToken = apiToken
	return &this
}

// NewKubernetesAgentConfigRequestWithDefaults instantiates a new KubernetesAgentConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesAgentConfigRequestWithDefaults() *KubernetesAgentConfigRequest {
	this := KubernetesAgentConfigRequest{}
	return &this
}

// GetMatchLabels returns the MatchLabels field value
func (o *KubernetesAgentConfigRequest) GetMatchLabels() []MatchLabel {
	if o == nil {
		var ret []MatchLabel
		return ret
	}

	return o.MatchLabels
}

// GetMatchLabelsOk returns a tuple with the MatchLabels field value
// and a boolean to check if the value has been set.
func (o *KubernetesAgentConfigRequest) GetMatchLabelsOk() ([]MatchLabel, bool) {
	if o == nil {
		return nil, false
	}
	return o.MatchLabels, true
}

// SetMatchLabels sets field value
func (o *KubernetesAgentConfigRequest) SetMatchLabels(v []MatchLabel) {
	o.MatchLabels = v
}

// GetApiToken returns the ApiToken field value
func (o *KubernetesAgentConfigRequest) GetApiToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiToken
}

// GetApiTokenOk returns a tuple with the ApiToken field value
// and a boolean to check if the value has been set.
func (o *KubernetesAgentConfigRequest) GetApiTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiToken, true
}

// SetApiToken sets field value
func (o *KubernetesAgentConfigRequest) SetApiToken(v string) {
	o.ApiToken = v
}

func (o KubernetesAgentConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["match_labels"] = o.MatchLabels
	}
	if true {
		toSerialize["api_token"] = o.ApiToken
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *KubernetesAgentConfigRequest) UnmarshalJSON(bytes []byte) (err error) {
	varKubernetesAgentConfigRequest := _KubernetesAgentConfigRequest{}

	if err = json.Unmarshal(bytes, &varKubernetesAgentConfigRequest); err == nil {
		*o = KubernetesAgentConfigRequest(varKubernetesAgentConfigRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "match_labels")
		delete(additionalProperties, "api_token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableKubernetesAgentConfigRequest struct {
	value *KubernetesAgentConfigRequest
	isSet bool
}

func (v NullableKubernetesAgentConfigRequest) Get() *KubernetesAgentConfigRequest {
	return v.value
}

func (v *NullableKubernetesAgentConfigRequest) Set(val *KubernetesAgentConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesAgentConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesAgentConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesAgentConfigRequest(val *KubernetesAgentConfigRequest) *NullableKubernetesAgentConfigRequest {
	return &NullableKubernetesAgentConfigRequest{value: val, isSet: true}
}

func (v NullableKubernetesAgentConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesAgentConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


