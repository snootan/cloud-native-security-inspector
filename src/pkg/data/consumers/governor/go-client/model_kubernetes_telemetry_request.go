/*
Catalog Governor Service REST API

This is the service to track assets deployed in customer clusters

API version: 0.1.0
Contact: content-building-ecosystem@vmware.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KubernetesTelemetryRequest Request for updating telemetry for a cluster
type KubernetesTelemetryRequest struct {
	Workloads []KubernetesWorkload `json:"workloads"`
	AdditionalProperties map[string]interface{}
}

type _KubernetesTelemetryRequest KubernetesTelemetryRequest

// NewKubernetesTelemetryRequest instantiates a new KubernetesTelemetryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesTelemetryRequest(workloads []KubernetesWorkload) *KubernetesTelemetryRequest {
	this := KubernetesTelemetryRequest{}
	this.Workloads = workloads
	return &this
}

// NewKubernetesTelemetryRequestWithDefaults instantiates a new KubernetesTelemetryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesTelemetryRequestWithDefaults() *KubernetesTelemetryRequest {
	this := KubernetesTelemetryRequest{}
	return &this
}

// GetWorkloads returns the Workloads field value
func (o *KubernetesTelemetryRequest) GetWorkloads() []KubernetesWorkload {
	if o == nil {
		var ret []KubernetesWorkload
		return ret
	}

	return o.Workloads
}

// GetWorkloadsOk returns a tuple with the Workloads field value
// and a boolean to check if the value has been set.
func (o *KubernetesTelemetryRequest) GetWorkloadsOk() ([]KubernetesWorkload, bool) {
	if o == nil {
		return nil, false
	}
	return o.Workloads, true
}

// SetWorkloads sets field value
func (o *KubernetesTelemetryRequest) SetWorkloads(v []KubernetesWorkload) {
	o.Workloads = v
}

func (o KubernetesTelemetryRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["workloads"] = o.Workloads
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *KubernetesTelemetryRequest) UnmarshalJSON(bytes []byte) (err error) {
	varKubernetesTelemetryRequest := _KubernetesTelemetryRequest{}

	if err = json.Unmarshal(bytes, &varKubernetesTelemetryRequest); err == nil {
		*o = KubernetesTelemetryRequest(varKubernetesTelemetryRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "workloads")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableKubernetesTelemetryRequest struct {
	value *KubernetesTelemetryRequest
	isSet bool
}

func (v NullableKubernetesTelemetryRequest) Get() *KubernetesTelemetryRequest {
	return v.value
}

func (v *NullableKubernetesTelemetryRequest) Set(val *KubernetesTelemetryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesTelemetryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesTelemetryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesTelemetryRequest(val *KubernetesTelemetryRequest) *NullableKubernetesTelemetryRequest {
	return &NullableKubernetesTelemetryRequest{value: val, isSet: true}
}

func (v NullableKubernetesTelemetryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesTelemetryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


