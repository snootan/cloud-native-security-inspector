/*
Catalog Governor Service REST API

This is the service to track assets deployed in customer clusters

API version: 0.1.0
Contact: content-building-ecosystem@vmware.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// KubernetesTelemetryResponse Response with telemetry properties when querying for cluster details
type KubernetesTelemetryResponse struct {
	// Last synchronization of telemetry time
	SyncAt *time.Time `json:"sync_at,omitempty"`
	// User who sent last telemetry data
	SyncBy *string `json:"sync_by,omitempty"`
	Workloads []KubernetesWorkload `json:"workloads"`
	AdditionalProperties map[string]interface{}
}

type _KubernetesTelemetryResponse KubernetesTelemetryResponse

// NewKubernetesTelemetryResponse instantiates a new KubernetesTelemetryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesTelemetryResponse(workloads []KubernetesWorkload) *KubernetesTelemetryResponse {
	this := KubernetesTelemetryResponse{}
	this.Workloads = workloads
	return &this
}

// NewKubernetesTelemetryResponseWithDefaults instantiates a new KubernetesTelemetryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesTelemetryResponseWithDefaults() *KubernetesTelemetryResponse {
	this := KubernetesTelemetryResponse{}
	return &this
}

// GetSyncAt returns the SyncAt field value if set, zero value otherwise.
func (o *KubernetesTelemetryResponse) GetSyncAt() time.Time {
	if o == nil || o.SyncAt == nil {
		var ret time.Time
		return ret
	}
	return *o.SyncAt
}

// GetSyncAtOk returns a tuple with the SyncAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesTelemetryResponse) GetSyncAtOk() (*time.Time, bool) {
	if o == nil || o.SyncAt == nil {
		return nil, false
	}
	return o.SyncAt, true
}

// HasSyncAt returns a boolean if a field has been set.
func (o *KubernetesTelemetryResponse) HasSyncAt() bool {
	if o != nil && o.SyncAt != nil {
		return true
	}

	return false
}

// SetSyncAt gets a reference to the given time.Time and assigns it to the SyncAt field.
func (o *KubernetesTelemetryResponse) SetSyncAt(v time.Time) {
	o.SyncAt = &v
}

// GetSyncBy returns the SyncBy field value if set, zero value otherwise.
func (o *KubernetesTelemetryResponse) GetSyncBy() string {
	if o == nil || o.SyncBy == nil {
		var ret string
		return ret
	}
	return *o.SyncBy
}

// GetSyncByOk returns a tuple with the SyncBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesTelemetryResponse) GetSyncByOk() (*string, bool) {
	if o == nil || o.SyncBy == nil {
		return nil, false
	}
	return o.SyncBy, true
}

// HasSyncBy returns a boolean if a field has been set.
func (o *KubernetesTelemetryResponse) HasSyncBy() bool {
	if o != nil && o.SyncBy != nil {
		return true
	}

	return false
}

// SetSyncBy gets a reference to the given string and assigns it to the SyncBy field.
func (o *KubernetesTelemetryResponse) SetSyncBy(v string) {
	o.SyncBy = &v
}

// GetWorkloads returns the Workloads field value
func (o *KubernetesTelemetryResponse) GetWorkloads() []KubernetesWorkload {
	if o == nil {
		var ret []KubernetesWorkload
		return ret
	}

	return o.Workloads
}

// GetWorkloadsOk returns a tuple with the Workloads field value
// and a boolean to check if the value has been set.
func (o *KubernetesTelemetryResponse) GetWorkloadsOk() ([]KubernetesWorkload, bool) {
	if o == nil {
		return nil, false
	}
	return o.Workloads, true
}

// SetWorkloads sets field value
func (o *KubernetesTelemetryResponse) SetWorkloads(v []KubernetesWorkload) {
	o.Workloads = v
}

func (o KubernetesTelemetryResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SyncAt != nil {
		toSerialize["sync_at"] = o.SyncAt
	}
	if o.SyncBy != nil {
		toSerialize["sync_by"] = o.SyncBy
	}
	if true {
		toSerialize["workloads"] = o.Workloads
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *KubernetesTelemetryResponse) UnmarshalJSON(bytes []byte) (err error) {
	varKubernetesTelemetryResponse := _KubernetesTelemetryResponse{}

	if err = json.Unmarshal(bytes, &varKubernetesTelemetryResponse); err == nil {
		*o = KubernetesTelemetryResponse(varKubernetesTelemetryResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "sync_at")
		delete(additionalProperties, "sync_by")
		delete(additionalProperties, "workloads")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableKubernetesTelemetryResponse struct {
	value *KubernetesTelemetryResponse
	isSet bool
}

func (v NullableKubernetesTelemetryResponse) Get() *KubernetesTelemetryResponse {
	return v.value
}

func (v *NullableKubernetesTelemetryResponse) Set(val *KubernetesTelemetryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesTelemetryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesTelemetryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesTelemetryResponse(val *KubernetesTelemetryResponse) *NullableKubernetesTelemetryResponse {
	return &NullableKubernetesTelemetryResponse{value: val, isSet: true}
}

func (v NullableKubernetesTelemetryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesTelemetryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


